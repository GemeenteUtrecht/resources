# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    api_documentation:
        servers:
        -   url: //resources.zaakonline.nl/
            description: Sandbox server
        info:
            description: |
                Welkom inovator! <br>
                Fijn dat je de tijd en moeite hebt genomen om je te verdiepen in dit component. 
                
                # Introductie               
                Het resources component is ontwikkeld voor de gemeente Utrecht en heeft als doel het gebruik van multimedia bestanden te faciliteren. Het stelt je in staat om multimedia bestanden (waaronder plaatjes en filmpjes) en documenten, te gebruiken met bijvoorbeeld componenten, websites of andere apps.
              
                # Common ground en open source
                Om het voor andere partijen zo makkelijk mogenlijk te maken dit component bieden we zo veel mogenlijk informatie openbaar aan.  
                - [datamodel als pdf](/schema/datamodel.pdf)
                - [datamodel als mwb](/schema/datamodel.mwb)
                - [codebase op github](https://github.com/GemeenteUtrecht/resources)
                - [codebase als zip](https://github.com/GemeenteUtrecht/resources/archive/conduction.zip)
                - [docker container](https://cloud.docker.com/u/huwelijksplanner/repository/docker/huwelijksplanner/resources-php)
                - [online demo](http://resources.demo.zaakonline.nl/)

                # OpenAPI Specification, Cross-Origin Resource Sharing en linked Data
                Deze API is gedocumenteerd in het **OpenAPI format** 
                De API bevat Cross-Origin Resource Sharing (CORS) en is geimplementeerd volgen de [W3C spec](https://www.w3.org/TR/cors/) standaarden. De API staat cross-domain communicatie van de browser toe. Alle responses hebben een "wildcard same-origin" dit maakt ze volledig publiekelijk en toegankelijk voor iedereen. Dat geld voor elke code op elke site.

                # Authenticatie

                Trouwplanner heeft twee vormen van authenticatie:
                  - API Key
                  - OAuth2
                OAuth2 - is een open protocol wat veilige authorizatie regeld op een simpele en  gestandarizeerde manier voor het web, mobile en desktop applicaties.

                <security-definitions />

            version: 0.0.1
            title: 'Resources API'
            termsOfService: 'http://www.zaakonline.nl/terms/'
            contact:
                name: API Support
                email: support@conduction.nl
                url: 'https://github.com/GemeenteUtrecht/trouwplanner'
            x-logo:
                url: '/img/vng.svg'
                altText: VNG Realisatie
            license:
                name: EUPL 1.2
                url: 'https://opensource.org/licenses/EUPL-1.2'
        externalDocs:
            description: Find out more in depth information on the working of the Zaakonline Components.
            url: 'http://www.zaakonline.nl'
        tags:
              # The general endpoints  
            - name: Document
              description: "Een document zijnde bestand, film of geluidsopname"
            - name: Applicatie
              description: "De Organisatie wordt gebruikt om standaard configuraties in te regelen"  
              # Grouping the endopoint  
        x-tagGroups:
            - name: Resources
              tags:
              - Document
            - name: Applicatie
              tags:
              - Organisatie
              - User
        
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php, Client}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
    
    App\Swagger\SwaggerDecorator:
        #decorates: 'api_platform.swagger.normalizer.documentation'
        decorates: 'api_platform.swagger.normalizer.api_gateway'
        arguments:
            - '@App\Swagger\SwaggerDecorator.inner'
            - '%api_documentation%'
        autoconfigure: false     
    
    # please note that last definitions always *replace* previous ones
    App\Subscriber\TablePrefixSubscriber:
        class: App\Subscriber\TablePrefixSubscriber
        arguments:
            - '%table_prefix%'
        tags: 
            - { name: doctrine.event_subscriber }