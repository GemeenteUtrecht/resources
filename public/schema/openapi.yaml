openapi: 3.0.2
info:
  description: |
    Welkom inovator! <br>
    Fijn dat je de tijd en moeite hebt genomen om je te verdiepen in dit component. 
    
    # Introductie               
    Het resources component is ontwikkeld voor de gemeente Utrecht en heeft als doel het gebruik van multimedia bestanden te faciliteren. Het stelt je in staat om multimedia bestanden (waaronder plaatjes en filmpjes) en documenten, te gebruiken met bijvoorbeeld componenten, websites of andere apps.
    
    # Common ground en open source
    Om het voor andere partijen zo makkelijk mogenlijk te maken dit component bieden we zo veel mogenlijk informatie openbaar aan.  
    - [datamodel als pdf](/schema/datamodel.pdf)
    - [datamodel als mwb](/schema/datamodel.mwb)
    - [codebase op github](https://github.com/GemeenteUtrecht/resources)
    - [codebase als zip](https://github.com/GemeenteUtrecht/resources/archive/conduction.zip)
    - [docker container](https://cloud.docker.com/u/huwelijksplanner/repository/docker/huwelijksplanner/resources-php)
    - [online demo](http://resources.demo.zaakonline.nl/)
    
    # OpenAPI Specification, Cross-Origin Resource Sharing en linked Data
    Deze API is gedocumenteerd in het **OpenAPI format** 
    De API bevat Cross-Origin Resource Sharing (CORS) en is geimplementeerd volgen de [W3C spec](https://www.w3.org/TR/cors/) standaarden. De API staat cross-domain communicatie van de browser toe. Alle responses hebben een "wildcard same-origin" dit maakt ze volledig publiekelijk en toegankelijk voor iedereen. Dat geld voor elke code op elke site.
    
    # Authenticatie
    
    Trouwplanner heeft twee vormen van authenticatie:
      - API Key
      - OAuth2
    OAuth2 - is een open protocol wat veilige authorizatie regeld op een simpele en  gestandarizeerde manier voor het web, mobile en desktop applicaties.
    
    <security-definitions />
    
  version: 0.0.1
  title: 'Resources API'
  termsOfService: 'http://www.zaakonline.nl/terms/'
  contact:
    name: 'API Support'
    email: support@conduction.nl
    url: 'https://github.com/GemeenteUtrecht/trouwplanner'
  x-logo:
    url: /img/vng.svg
    altText: 'VNG Realisatie'
  license:
    name: 'EUPL 1.2'
    url: 'https://opensource.org/licenses/EUPL-1.2'
paths:
  /documenten:
    get:
      summary: 'Haalt een verzameling van documenten op'
      tags:
        - Document
      operationId: getDocumentCollection
      responses:
        200:
          description: 'Document collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
      parameters: []
    post:
      summary: 'Maak een document aan'
      tags:
        - Document
      operationId: postDocumentCollection
      responses:
        201:
          description: 'Document resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
          links:
            GetDocumentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDocumentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /documenten/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
        description: 'The new Document resource'
  '/documenten/{id}':
    get:
      summary: 'Haal een specifiek document op'
      tags:
        - Document
      operationId: getDocumentItem
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Document resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
        404:
          description: 'Resource not found'
    put:
      summary: 'Vervang een specifiek document'
      tags:
        - Document
      operationId: putDocumentItem
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Document resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Document'
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            text/html:
              schema:
                $ref: '#/components/schemas/Document'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document'
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
          text/html:
            schema:
              $ref: '#/components/schemas/Document'
        description: 'The updated Document resource'
    delete:
      summary: 'Verwijder een specifiek document'
      tags:
        - Document
      operationId: deleteDocumentItem
      responses:
        204:
          description: 'Document resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/documenten/{id}/log':
    get:
      summary: 'Logboek inzien'
      description: 'Geeft een array van eerdere versies en wijzigingen van dit object'
      consumes:
        - application/json
        - text/html
      produces:
        - application/json
      responses:
        200:
          description: 'Een overzicht van versies'
        400:
          description: 'Ongeldige aanvraag'
        404:
          description: 'Document niet gevonden'
      tags:
        - Document
      operationId: logDocumentItem
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/documenten/{id}/revert/{version}':
    post:
      summary: 'Versie terugdraaid'
      description: 'Herstel een eerdere versie van dit object. Dit is een destructieve actie die niet ongedaan kan worden gemaakt'
      consumes:
        - application/json
        - text/html
      produces:
        - application/json
      responses:
        202:
          description: 'Terug gedraaid naar eerdere versie'
        400:
          description: 'Ongeldige aanvraag'
        404:
          description: 'Document niet gevonden'
      tags:
        - Document
      operationId: revertDocumentItem
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Document-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Document-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Document-write'
        description: 'The new Document resource'
  /organisaties:
    get:
      summary: 'Haal een verzameling van organisatie resources op'
      tags:
        - Organisatie
      operationId: getOrganisatieCollection
      responses:
        200:
          description: 'Organisatie collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisatie'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisatie'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisatie'
      parameters: []
    post:
      summary: 'Maak een organisatie resource aan'
      tags:
        - Organisatie
      operationId: postOrganisatieCollection
      responses:
        201:
          description: 'Organisatie resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organisatie'
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisatie'
          links:
            GetOrganisatieItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganisatieItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organisaties/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organisatie'
          application/json:
            schema:
              $ref: '#/components/schemas/Organisatie'
          text/html:
            schema:
              $ref: '#/components/schemas/Organisatie'
        description: 'The new Organisatie resource'
  '/organisaties/{id}':
    get:
      summary: 'Haal een specifieke organisatie resource op'
      tags:
        - Organisatie
      operationId: getOrganisatieItem
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Organisatie resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organisatie'
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisatie'
        404:
          description: 'Resource not found'
    put:
      summary: 'Vervang een specifieke organisatie resource'
      tags:
        - Organisatie
      operationId: putOrganisatieItem
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Organisatie resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organisatie'
            application/json:
              schema:
                $ref: '#/components/schemas/Organisatie'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisatie'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organisatie'
          application/json:
            schema:
              $ref: '#/components/schemas/Organisatie'
          text/html:
            schema:
              $ref: '#/components/schemas/Organisatie'
        description: 'The updated Organisatie resource'
    delete:
      summary: 'Verwijder een specifieke organisatie resource'
      tags:
        - Organisatie
      operationId: deleteOrganisatieItem
      responses:
        204:
          description: 'Organisatie resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/organisaties/{id}/log':
    get:
      summary: 'Logboek inzien'
      description: 'Geeft een array van eerdere versies en wijzigingen van dit object'
      consumes:
        - application/json
        - text/html
      produces:
        - application/json
      responses:
        200:
          description: 'Een overzicht van versies'
        400:
          description: 'Ongeldige aanvraag'
        404:
          description: 'Huwelijk of aanvraag niet gevonden'
      tags:
        - Organisatie
      operationId: logOrganisatieItem
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/organisaties/{id}/revert/{version}':
    post:
      summary: 'Versie terugdraaien'
      description: 'Herstel een eerdere versie van dit object. Dit is een destructieve actie die niet ongedaan kan worden gemaakt'
      consumes:
        - application/json
        - text/html
      produces:
        - application/json
      responses:
        202:
          description: 'Terug gedraaid naar eerdere versie'
        400:
          description: 'Ongeldige aanvraag'
        404:
          description: 'Huwelijk of aanvraag niet gevonden'
      tags:
        - Organisatie
      operationId: revertOrganisatieItem
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organisatie-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organisatie-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organisatie-write'
        description: 'The new Organisatie resource'
  /users:
    get:
      tags:
        - User
      operationId: getUserCollection
      summary: 'Retrieves the collection of User resources.'
      responses:
        200:
          description: 'User collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user:read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user:read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user:read'
      parameters: []
    post:
      tags:
        - User
      operationId: postUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
          links:
            GetUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-user_user:write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-user_user:write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-user_user:write'
        description: 'The new User resource'
  '/users/{id}':
    get:
      tags:
        - User
      operationId: getUserItem
      summary: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'User resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - User
      operationId: deleteUserItem
      summary: 'Removes the User resource.'
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - User
      operationId: putUserItem
      summary: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user_user:read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-user_user:write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-user_user:write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-user_user:write'
        description: 'The updated User resource'
security:
  -
    apiKey: []
components:
  schemas:
    Document:
      type: object
      description: Document
      properties:
        id:
          description: 'Het identificatie nummer van dit Document <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          type: integer
        identificatie:
          type: string
          example: 6a36c2c4-213e-4348-a467-dfa3a30f64aa
          description: 'De unieke identificatie van dit object binnen de organisatie die dit object heeft gecreeerd. <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          maxLength: 40
        bronOrganisatie:
          description: 'Het Huwelijk waartoe deze partner behoord'
          type: string
        naam:
          description: 'The original name of this file.'
          type: string
        orgineleNaam:
          description: 'The original name of this file.'
          type: string
        size:
          description: 'The extention of this file in bytes, where 1024 reprecent 1KB and 1048576 1MB'
          type: integer
        extention:
          description: 'The extention of this file.'
          type: string
        mimeType:
          description: 'The type of the file acording to https://www.iana.org/assignments/media-types/media-types.xhtml.'
          type: string
        url:
          description: 'The location of this file.'
          type: string
        base64:
          description: 'The base64 representation of this file'
          type: string
        registratieDatum:
          description: 'Datum waarop dit product geregistreerd is'
          type: string
          format: date-time
      required:
        - naam
        - orgineleNaam
        - size
        - extention
        - mimeType
    Document-read:
      type: object
      description: Document
      properties:
        id:
          description: 'Het identificatie nummer van dit Document <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          type: integer
        identificatie:
          type: string
          example: 6a36c2c4-213e-4348-a467-dfa3a30f64aa
          description: 'De unieke identificatie van dit object binnen de organisatie die dit object heeft gecreeerd. <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          maxLength: 40
        naam:
          description: 'The original name of this file.'
          type: string
        orgineleNaam:
          description: 'The original name of this file.'
          type: string
        size:
          description: 'The extention of this file in bytes, where 1024 reprecent 1KB and 1048576 1MB'
          type: integer
        extention:
          description: 'The extention of this file.'
          type: string
        mimeType:
          description: 'The type of the file acording to https://www.iana.org/assignments/media-types/media-types.xhtml.'
          type: string
        url:
          description: 'The location of this file.'
          type: string
        base64:
          description: 'The base64 representation of this file'
          type: string
        registratieDatum:
          description: 'Datum waarop dit product geregistreerd is'
          type: string
          format: date-time
      required:
        - naam
        - orgineleNaam
        - size
        - extention
        - mimeType
    Document-write:
      type: object
      description: Document
      properties:
        id:
          description: 'Het identificatie nummer van dit Document <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          type: integer
        identificatie:
          type: string
          example: 6a36c2c4-213e-4348-a467-dfa3a30f64aa
          description: 'De unieke identificatie van dit object binnen de organisatie die dit object heeft gecreeerd. <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          maxLength: 40
    Organisatie:
      type: object
      description: Organisatie
      properties:
        id:
          description: 'Het unieke identificatie nummer van deze organisatie binnen deze api <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          type: integer
        rsin:
          title: Organisatie
          type: string
          example: '123456789'
          required: 'true'
          maxLength: 9
          minLength: 8
          description: 'Het RSIN van deze organisatie. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef'
        kvk:
          title: kvk
          type: string
          example: '12345678'
          required: 'true'
          minLength: 8
          maxLength: 9
          description: 'Het KVK nummer van deze organisatie'
        btw:
          title: btw
          type: string
          example: NL123456789B01
          required: 'true'
          minLength: 14
          maxLength: 18
          description: 'Het BTW nummer van deze organisatie https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/zakelijk/btw/administratie_bijhouden/btw_nummers_controleren/uw_btw_nummer, het btw nummer moet het RSIN nummer bevatten.'
        eori:
          title: eori
          type: string
          example: '123456789'
          required: 'true'
          minLength: 5
          maxLength: 14
          description: 'Het EORI (Europese Douane NR) van deze organisatie, zie ook https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/douane_voor_bedrijven/naslagwerken_en_overige_informatie/eori_nummer/'
        naam:
          type: string
          maxLength: 255
          minLength: 5
          example: 'Gemeente Zuiddrecht'
          description: 'De naam van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/name">https://schema.org/name</a>'
        beschrijving:
          type: string
          maxLength: 2000
          minLength: 25
          example: 'Deze prachtige organisatie staat voor de hoogste normen en waarden'
          description: 'Een beschrijvende tekst over deze organisatie  <br /><b>Schema:</b> <a href="https://schema.org/description">https://schema.org/description</a>'
        emailadres:
          type: email
          maxLength: 255
          minLength: 8
          example: john@do.nl
          description: 'Het emailadres van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/email">https://schema.org/email</a>'
        telefoonnummer:
          type: string
          maxLength: 255
          minLength: 10
          example: +31(0)6-12345678
          description: 'Het telefoon nummer van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/telephone">https://schema.org/telephone</a>'
        documenten:
          description: 'Documenten die bij deze organisatie horen'
          type: array
          items:
            type: string
        users:
          description: 'Gebruikers die bij deze organisatie horen'
          type: array
          items:
            type: string
        instellingen:
          title: Instellingen
          type: array
          example: '[]'
          description: 'HDe instellingen voor deze organisatie, kijk in de documentatie van deze api voor de mogelijke instellingen'
          items:
            type: string
      required:
        - naam
        - beschrijving
    Organisatie-read:
      type: object
      description: Organisatie
      properties:
        id:
          description: 'Het unieke identificatie nummer van deze organisatie binnen deze api <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          type: integer
        rsin:
          title: Organisatie
          type: string
          example: '123456789'
          required: 'true'
          maxLength: 9
          minLength: 8
          description: 'Het RSIN van deze organisatie. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef'
        kvk:
          title: kvk
          type: string
          example: '12345678'
          required: 'true'
          minLength: 8
          maxLength: 9
          description: 'Het KVK nummer van deze organisatie'
        btw:
          title: btw
          type: string
          example: NL123456789B01
          required: 'true'
          minLength: 14
          maxLength: 18
          description: 'Het BTW nummer van deze organisatie https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/zakelijk/btw/administratie_bijhouden/btw_nummers_controleren/uw_btw_nummer, het btw nummer moet het RSIN nummer bevatten.'
        eori:
          title: eori
          type: string
          example: '123456789'
          required: 'true'
          minLength: 5
          maxLength: 14
          description: 'Het EORI (Europese Douane NR) van deze organisatie, zie ook https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/douane_voor_bedrijven/naslagwerken_en_overige_informatie/eori_nummer/'
        naam:
          type: string
          maxLength: 255
          minLength: 5
          example: 'Gemeente Zuiddrecht'
          description: 'De naam van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/name">https://schema.org/name</a>'
        beschrijving:
          type: string
          maxLength: 2000
          minLength: 25
          example: 'Deze prachtige organisatie staat voor de hoogste normen en waarden'
          description: 'Een beschrijvende tekst over deze organisatie  <br /><b>Schema:</b> <a href="https://schema.org/description">https://schema.org/description</a>'
        emailadres:
          type: email
          maxLength: 255
          minLength: 8
          example: john@do.nl
          description: 'Het emailadres van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/email">https://schema.org/email</a>'
        telefoonnummer:
          type: string
          maxLength: 255
          minLength: 10
          example: +31(0)6-12345678
          description: 'Het telefoon nummer van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/telephone">https://schema.org/telephone</a>'
        instellingen:
          title: Instellingen
          type: array
          example: '[]'
          description: 'HDe instellingen voor deze organisatie, kijk in de documentatie van deze api voor de mogelijke instellingen'
          items:
            type: string
      required:
        - naam
        - beschrijving
    Organisatie-write:
      type: object
      description: Organisatie
      properties:
        id:
          description: 'Het unieke identificatie nummer van deze organisatie binnen deze api <br /><b>Schema:</b> <a href="https://schema.org/identifier">https://schema.org/identifier</a>'
          type: integer
        rsin:
          title: Organisatie
          type: string
          example: '123456789'
          required: 'true'
          maxLength: 9
          minLength: 8
          description: 'Het RSIN van deze organisatie. Dit moet een geldig RSIN zijn van 9 nummers en voldoen aan https://nl.wikipedia.org/wiki/Burgerservicenummer#11-proef'
        kvk:
          title: kvk
          type: string
          example: '12345678'
          required: 'true'
          minLength: 8
          maxLength: 9
          description: 'Het KVK nummer van deze organisatie'
        btw:
          title: btw
          type: string
          example: NL123456789B01
          required: 'true'
          minLength: 14
          maxLength: 18
          description: 'Het BTW nummer van deze organisatie https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/zakelijk/btw/administratie_bijhouden/btw_nummers_controleren/uw_btw_nummer, het btw nummer moet het RSIN nummer bevatten.'
        eori:
          title: eori
          type: string
          example: '123456789'
          required: 'true'
          minLength: 5
          maxLength: 14
          description: 'Het EORI (Europese Douane NR) van deze organisatie, zie ook https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/douane_voor_bedrijven/naslagwerken_en_overige_informatie/eori_nummer/'
        naam:
          type: string
          maxLength: 255
          minLength: 5
          example: 'Gemeente Zuiddrecht'
          description: 'De naam van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/name">https://schema.org/name</a>'
        beschrijving:
          type: string
          maxLength: 2000
          minLength: 25
          example: 'Deze prachtige organisatie staat voor de hoogste normen en waarden'
          description: 'Een beschrijvende tekst over deze organisatie  <br /><b>Schema:</b> <a href="https://schema.org/description">https://schema.org/description</a>'
        emailadres:
          type: email
          maxLength: 255
          minLength: 8
          example: john@do.nl
          description: 'Het emailadres van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/email">https://schema.org/email</a>'
        telefoonnummer:
          type: string
          maxLength: 255
          minLength: 10
          example: +31(0)6-12345678
          description: 'Het telefoon nummer van deze organisatie <br /><b>Schema:</b> <a href="https://schema.org/telephone">https://schema.org/telephone</a>'
        instellingen:
          title: Instellingen
          type: array
          example: '[]'
          description: 'HDe instellingen voor deze organisatie, kijk in de documentatie van deze api voor de mogelijke instellingen'
          items:
            type: string
      required:
        - naam
        - beschrijving
    'User-user_user:read':
      type: object
      description: 'Een user of applicatie is een unique geidentificeerde entiteit wat een onderdeel van een organisatie kan zijn.'
      properties:
        fullname:
          type: string
    'User-user_user:write':
      type: object
      description: 'Een user of applicatie is een unique geidentificeerde entiteit wat een onderdeel van een organisatie kan zijn.'
      properties:
        fullname:
          type: string
        plainPassword: {  }
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      description: 'Value for the Authorization header'
      name: Authorization
servers:
  -
    url: //resources.zaakonline.nl/
    description: 'Sandbox server'
externalDocs:
  description: 'Find out more in depth information on the working of the Zaakonline Components.'
  url: 'http://www.zaakonline.nl'
tags:
  -
    name: Document
    description: 'Een document zijnde bestand, film of geluidsopname'
  -
    name: Organisatie
    description: 'De Organisatie wordt gebruikt om standaard configuraties in te regelen'
x-tagGroups:
  -
    name: Resources
    tags:
      - Document
  -
    name: Organisatie
    tags:
      - Organisatie
